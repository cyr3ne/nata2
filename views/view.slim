- url_path = "#{@service_name}"
.col-md-12
  h3
    span #{@service_name}
    - if @host_name
      - url_path += "/#{@host_name}"
      small
        span &nbsp;&nbsp;
        span.glyphicon.glyphicon-hand-right
        span &nbsp;&nbsp;
      span #{@host_name}
      - if @database_name
        - url_path += "/#{@database_name}"
        small
          span &nbsp;&nbsp;
          span.glyphicon.glyphicon-hand-right
          span &nbsp;&nbsp;
        span #{@database_name}

    span style="float: right;"
      .btn-group.btn-group-xs
        - if @time_range == 'd'
          button.btn.btn-primary.active type="button" 24時間
        - else
          a.btn.btn-default href="/view/#{url_path}?t=d" 24時間
        - if @time_range == 'w'
          button.btn.btn-primary.active type="button" 1週間
        - else
          a.btn.btn-default href="/view/#{url_path}?t=w" 1週間
        - if @time_range == 'm'
          button.btn.btn-primary.active type="button" 1ヶ月
        - else
          a.btn.btn-default href="/view/#{url_path}?t=m" 1ヶ月
        - if @time_range == 'y'
          button.btn.btn-primary.active type="button" 1年
        - else
          a.btn.btn-default href="/view/#{url_path}?t=y" 1年

  div#switch align="right"
    .btn-group.btn-group-xs
      button.btn.btn-default#switch_list type="button" onclick="loadSlowQueries('_list', '/_list/#{url_path}', '?#{@params.except('sort').to_query}')"
        span.glyphicon.glyphicon-list
        b 履歴
    .btn-group.btn-group-xs
      button.btn.btn-default#switchdumpc type="button" onclick="loadSlowQueries('dumpc', '/dump/#{url_path}', '?#{@params.except('page', 'sort').merge(sort: 'c').to_query}')"
        span.glyphicon.glyphicon-plus
        b 合計回数順
      button.btn.btn-default#switchdumpt type="button" onclick="loadSlowQueries('dumpt', '/dump/#{url_path}', '?#{@params.except('page', 'sort').merge(sort: 't').to_query}')"
        span.glyphicon.glyphicon-time
        b 合計クエリ実行時間順
      button.btn.btn-default#switchdumpl type="button" onclick="loadSlowQueries('dumpl', '/dump/#{url_path}', '?#{@params.except('page', 'sort').merge(sort: 'l').to_query}')"
        span.glyphicon.glyphicon-lock
        b 合計ロック時間順
      button.btn.btn-default#switchdumpr type="button" onclick="loadSlowQueries('dumpr', '/dump/#{url_path}', '?#{@params.except('page', 'sort').merge(sort: 'r').to_query}')"
        span.glyphicon.glyphicon-send
        b 合計フェッチ行数順
    .btn-group.btn-group-xs
      button.btn.btn-default#switchdumpat type="button" onclick="loadSlowQueries('dumpat', '/dump/#{url_path}', '?#{@params.except('page', 'sort').merge(sort: 'at').to_query}')"
        span.glyphicon.glyphicon-time
        b 平均クエリ実行時間順
      button.btn.btn-default#switchdumpal type="button" onclick="loadSlowQueries('dumpal', '/dump/#{url_path}', '?#{@params.except('page', 'sort').merge(sort: 'al').to_query}')"
        span.glyphicon.glyphicon-lock
        b 平均ロック時間順
      button.btn.btn-default#switchdumpar type="button" onclick="loadSlowQueries('dumpar', '/dump/#{url_path}', '?#{@params.except('page', 'sort').merge(sort: 'ar').to_query}')"
        span.glyphicon.glyphicon-send
        b 平均フェッチ行数順

#graph
#slowQueries

javascript:
  function loadSlowQueries(id_num, url, params) {
    getSlowQueries(id_num, url, params);
    window.history.pushState('', '', params);
  }

  function getSlowQueries(id_num, url, params) {
    $.ajax({
      beforeSend: function(){
        $("#switch button").attr("disabled","true");
      },
      url: url + params,
      success: function(result) {
        $("#slowQueries").html(result);
      },
      complete: function(xhr, event) {
        $("#switch button").removeAttr("disabled");
        $("#switch button").addClass("btn-default")
        $("#switch button").removeClass("btn-primary active")
        $("#switch" + id_num).addClass("btn-primary active");
        $("#switch" + id_num).removeClass("btn-default");
      }
    });
  }

  function loadGraph() {
    $.ajax({
      url: '/graph/#{url_path}',
      success: function(result) {
        $("#graph").html(result);
        drawGraph('count_slow_queries', eval('#{{JSON.generate(@graph_data)}}'), eval('#{{JSON.generate(@labels.keys)}}'), eval('#{{JSON.generate(@labels.values)}}'));
      },
    });
  }

  window.onload = function() {
    loadSlowQueries('#{@root}#{@params['sort']}', '/#{@root}/#{url_path}', '?#{@params.to_query}');
    loadGraph();
  }

  function getUrlVars(hoge) {
    var vars = {}, hash;
    var hashes = hoge.slice(hoge.indexOf('?') + 1).split('&');
    for (var i = 0; i < hashes.length; i++) {
      hash = hashes[i].split('=');
      vars[hash[0]] = hash[1];
    }
    return vars;
  }

  window.onpopstate = function(event) {
    var id;
    var path;
    var params = getUrlVars(location.search);
    console.log(location.pathname);
    if (typeof params.sort === 'undefined') {
      id = '_list';
      path = location.pathname.replace(/^\/view\//, '/_list/');
    } else {
      id = 'dump' + params['sort'];
      path = location.pathname.replace(/^\/view\//, '/dump/');
    };
    getSlowQueries(id, path, location.search);
  };
