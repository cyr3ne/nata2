h3
  span #{@service_name}
  - if @host_name
    small
      span &nbsp;&nbsp;
      span.glyphicon.glyphicon-hand-right
      span &nbsp;&nbsp;
    span #{@host_name}
  - if @database_name
    small
      span &nbsp;&nbsp;
      span.glyphicon.glyphicon-hand-right
      span &nbsp;&nbsp;
    span #{@database_name}

  span#periodSwitch style="float: right;"
    .btn-group.btn-group-xs
      - if @time_range == 'd'
        button.btn.btn-primary.active disabled="" type="button" 24時間
      - else
        a.btn.btn-default disabled="" href="?t=d" 24時間
      - if @time_range == 'w'
        button.btn.btn-primary.active disabled="" type="button" 1週間
      - else
        a.btn.btn-default disabled="" href="?t=w" 1週間
      - if @time_range == 'm'
        button.btn.btn-primary.active disabled="" type="button" 1ヶ月
      - else
        a.btn.btn-default disabled="" href="?t=m" 1ヶ月
      - if @time_range == 'y'
        button.btn.btn-primary.active disabled="" type="button" 1年
      - else
        a.btn.btn-default disabled="" href="?t=y" 1年

- list_path = @path.sub(/^\/view/, '/list')
- dump_path = @path.sub(/^\/view/, '/dump')
div#switch align="right"
  .btn-group.btn-group-xs
    button.btn.btn-default#switchlist disabled="" type="button" onclick="loadSlowQueries('list', '#{list_path}', '?#{@params.except('sort').to_query}')"
      span.glyphicon.glyphicon-list
      b 履歴
  .btn-group.btn-group-xs
    button.btn.btn-default#switchdumpc disabled="" type="button" onclick="loadSlowQueries('dumpc', '#{dump_path}', '?#{@params.except('page', 'sort').merge(sort: 'c').to_query}')"
      span.glyphicon.glyphicon-plus
      b 合計回数順
    button.btn.btn-default#switchdumpt disabled="" type="button" onclick="loadSlowQueries('dumpt', '#{dump_path}', '?#{@params.except('page', 'sort').merge(sort: 't').to_query}')"
      span.glyphicon.glyphicon-time
      b 合計クエリ実行時間順
    button.btn.btn-default#switchdumpl disabled="" type="button" onclick="loadSlowQueries('dumpl', '#{dump_path}', '?#{@params.except('page', 'sort').merge(sort: 'l').to_query}')"
      span.glyphicon.glyphicon-lock
      b 合計ロック時間順
    button.btn.btn-default#switchdumpr disabled="" type="button" onclick="loadSlowQueries('dumpr', '#{dump_path}', '?#{@params.except('page', 'sort').merge(sort: 'r').to_query}')"
      span.glyphicon.glyphicon-send
      b 合計フェッチ行数順
  .btn-group.btn-group-xs
    button.btn.btn-default#switchdumpat disabled="" type="button" onclick="loadSlowQueries('dumpat', '#{dump_path}', '?#{@params.except('page', 'sort').merge(sort: 'at').to_query}')"
      span.glyphicon.glyphicon-time
      b 平均クエリ実行時間順
    button.btn.btn-default#switchdumpal disabled="" type="button" onclick="loadSlowQueries('dumpal', '#{dump_path}', '?#{@params.except('page', 'sort').merge(sort: 'al').to_query}')"
      span.glyphicon.glyphicon-lock
      b 平均ロック時間順
    button.btn.btn-default#switchdumpar disabled="" type="button" onclick="loadSlowQueries('dumpar', '#{dump_path}', '?#{@params.except('page', 'sort').merge(sort: 'ar').to_query}')"
      span.glyphicon.glyphicon-send
      b 平均フェッチ行数順

h6
  - @labels.each do |name, meta|
    a href="#{meta[:path]}"
      span.label style="background-color : #{meta[:color]}" #{name}

div id="count_slow_queries" style="height: 200px;"

#slowQueries

javascript:
  function loadSlowQueries(id_num, url, params) {
    getSlowQueries(id_num, url, params);
    window.history.pushState('', '', params);
  }

  function getSlowQueries(id, url, params) {
    $.ajax({
      beforeSend: function(){
        $("#switch button").attr("disabled","true");
        $("#periodSwitch button").attr("disabled","true");
        $("#periodSwitch a").attr("disabled","true");
      },
      url: url + params,
      success: function(result) {
        $("#slowQueries").html(result);
      },
      complete: function(xhr, event) {
        $("#switch button").removeAttr("disabled");
        $("#periodSwitch button").removeAttr("disabled");
        $("#periodSwitch a").removeAttr("disabled");
        $("#switch button").addClass("btn-default")
        $("#switch button").removeClass("btn-primary active")
        $("#switch" + id).addClass("btn-primary active");
        $("#switch" + id).removeClass("btn-default");
      }
    });
  }

  function drawGraph(id, data, labels, colors) {
    new Morris.Line({
      element: id,
      data: data,
      xkey: 'period',
      ykeys: labels,
      labels: labels,
      lineColors: colors,
      pointSize: 0,
      hideHover: true
    });
  }

  window.onload = function() {
    loadSlowQueries('#{@root}#{@params['sort']}', '#{@path.sub(/^\/view/, '/' + @root)}', '?#{@params.to_query}');
    drawGraph('count_slow_queries', eval('#{{JSON.generate(@graph_data)}}'), eval('#{{JSON.generate(@labels.keys)}}'), eval('#{{JSON.generate(@labels.values.map { |l| l[:color] })}}'));
  }

  function getUrlVars(hoge) {
    var vars = {}, hash;
    var hashes = hoge.slice(hoge.indexOf('?') + 1).split('&');
    for (var i = 0; i < hashes.length; i++) {
      hash = hashes[i].split('=');
      vars[hash[0]] = hash[1];
    }
    return vars;
  }

  window.onpopstate = function(event) {
    var id;
    var path;
    var params = getUrlVars(location.search);
    if (typeof params.sort === 'undefined') {
      id = 'list';
      path = location.pathname.replace(/^\/view/, '/list');
    } else {
      id = 'dump' + params['sort'];
      path = location.pathname.replace(/^\/view/, '/dump');
    };
    getSlowQueries(id, path, location.search);
  };
